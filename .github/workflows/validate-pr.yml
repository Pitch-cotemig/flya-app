name: üîç Verificar Pull Request

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: üîé Verificar t√≠tulo da PR
        uses: actions/github-script@v7
        with:
          script: |
            const prTitle = context.payload.pull_request.title;
            const titleRegex = /^\[FLYA\] - .+/;

            if (!titleRegex.test(prTitle)) {
              core.setFailed("‚ùå O t√≠tulo da PR deve come√ßar com '[FLYA] - ' seguido de uma descri√ß√£o.");
            } else {
              console.log("‚úÖ T√≠tulo v√°lido");
            }

      - name: üìù Verificar se h√° descri√ß√£o na PR
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body || "";

            const match = body.match(/###\s*‚úçÔ∏è\s*\*\*Descri√ß√£o\*\*[\r\n]+([\s\S]*?)(?:\n|\r\n)?-{3,}/);

            if (!match || !match[1]) {
              core.setFailed("‚ùå N√£o foi poss√≠vel encontrar a se√ß√£o de descri√ß√£o entre os delimitadores.");
            } else {
              const description = match[1]
                .replace(/<!--.*?-->/gs, "") // remove coment√°rios
                .trim();

              console.log("üìã Descri√ß√£o capturada:", description);

              if (!description || description.length < 10) {
                core.setFailed("‚ùå A descri√ß√£o est√° vazia ou muito curta.");
              } else {
                console.log("‚úÖ Descri√ß√£o v√°lida");
              }
            }

      - name: ‚òëÔ∏è Verificar checklist marcado
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body || "";
            const checklistItems = [
              "- [x] me atribu√≠ como respons√°vel por esta pr",
              "- [x] resolvi conflitos de merge (se houver)",
              "- [x] a pr est√° seguindo o padr√£o de nomenclatura do t√≠tulo",
              "- [x] atualizei/adicionei testes (opcional, mas melhor pra garantir estabilidade no futuro e garantir um bom coverage)",
              "- [x] revisei se h√° prints ou c√≥digos de debug para remover"
            ];

            const bodyLower = body.toLowerCase();
            const allChecked = checklistItems.every(item => bodyLower.includes(item));
            if (!allChecked) {
              core.setFailed("‚ùå Nem todos os itens obrigat√≥rios do checklist est√£o marcados.");
            } else {
              console.log("‚úÖ Checklist completo");
            }
