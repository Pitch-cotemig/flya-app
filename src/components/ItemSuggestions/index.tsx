import React from "react";
import { Lightbulb, Plus } from "lucide-react";
import {
  SuggestionsContainer,
  SuggestionsHeader,
  SuggestionsTitle,
  SuggestionsGrid,
  SuggestionCard,
  SuggestionCategory,
  SuggestionsList,
  SuggestionItem,
} from "./styles";

interface SuggestionProps {
  destination: string;
  duration: number;
  onAddItem: (item: string, category: string) => void;
}

// TODO: Implementar API para buscar sugestÃµes personalizadas baseadas no destino e perfil do usuÃ¡rio
const DESTINATION_SUGGESTIONS = {
  Paris: {
    clothes: [
      "Casaco elegante",
      "Sapatos confortÃ¡veis",
      "Cachecol",
      "Guarda-chuva",
    ],
    electronics: ["Adaptador europeu", "Carregador portÃ¡til"],
    accessories: ["CÃ¢mera", "Mochila pequena", "Carteira de viagem"],
    other: ["Guia turÃ­stico", "Mapa da cidade"],
  },
  TÃ³quio: {
    clothes: ["Roupas leves", "Sapatos confortÃ¡veis", "MÃ¡scara facial"],
    electronics: ["Adaptador japonÃªs", "Tradutor eletrÃ´nico"],
    accessories: ["CartÃ£o de transporte", "Dinheiro em espÃ©cie"],
    other: ["Guia de frases", "App de traduÃ§Ã£o"],
  },
  Default: {
    clothes: ["Roupas Ã­ntimas", "Pijama", "Meias", "Sapatos extras"],
    toiletries: [
      "Escova de dentes",
      "Pasta de dente",
      "Shampoo",
      "Desodorante",
    ],
    electronics: ["Carregador", "Fones de ouvido", "Adaptador universal"],
    documents: [
      "Passaporte",
      "Identidade",
      "CartÃ£o de embarque",
      "Seguro viagem",
    ],
    medicine: ["RemÃ©dios pessoais", "Band-aid", "AnalgÃ©sico"],
    accessories: ["Ã“culos de sol", "RelÃ³gio", "Carteira", "Mochila"],
  },
};

export const ItemSuggestions: React.FC<SuggestionProps> = ({
  destination,
  duration,
  onAddItem,
}) => {
  // TODO: Substituir por chamada de API para buscar sugestÃµes personalizadas do backend
  const suggestions =
    DESTINATION_SUGGESTIONS[
      destination as keyof typeof DESTINATION_SUGGESTIONS
    ] || DESTINATION_SUGGESTIONS.Default;

  return (
    <SuggestionsContainer>
      <SuggestionsHeader>
        <Lightbulb size={20} />
        <SuggestionsTitle>
          SugestÃµes para {destination} ({duration} dias)
        </SuggestionsTitle>
      </SuggestionsHeader>

      <SuggestionsGrid>
        {Object.entries(suggestions).map(([category, items]) => (
          <SuggestionCard key={category}>
            <SuggestionCategory>
              {category === "clothes" && "ðŸ‘• Roupas"}
              {category === "toiletries" && "ðŸ§´ Higiene"}
              {category === "electronics" && "ðŸ“± EletrÃ´nicos"}
              {category === "documents" && "ðŸ“„ Documentos"}
              {category === "medicine" && "ðŸ’Š RemÃ©dios"}
              {category === "accessories" && "ðŸŽ’ AcessÃ³rios"}
              {category === "other" && "ðŸ“‹ Outros"}
            </SuggestionCategory>
            <SuggestionsList>
              {items.map((item) => (
                <SuggestionItem
                  key={item}
                  onClick={() => onAddItem(item, category)}
                >
                  <Plus size={12} />
                  {item}
                </SuggestionItem>
              ))}
            </SuggestionsList>
          </SuggestionCard>
        ))}
      </SuggestionsGrid>
    </SuggestionsContainer>
  );
};

export default ItemSuggestions;
